# Move base node parameters. 
# For full documentation of the parameters in this file, please see
#
#  http://wiki.ros.org/move_base#Parameters
#

# The rate in Hz at which to run the global planning loop. If the
# frequency is set to 0.0, the global planner will only run when a new
# goal is received or the local planner reports that its path is
# blocked.
planner_frequency:       0.0 #0.0 #0.1 (10sec)
# How long the planner will wait in seconds in an attempt to find a
# valid plan before space-clearing operations are performed.
planner_patience:        5.0

# The rate in Hz at which to run the control loop and send velocity
# commands to the base.
controller_frequency:   5.0
# How long the controller will wait in seconds without receiving a
# valid control before space-clearing operations are performed.
controller_patience:    15.0

# How long in seconds to allow for oscillation before executing
# recovery behaviors. A value of 0.0 corresponds to an infinite
# timeout.
oscillation_timeout:    10.0
# How far in meters the robot must move to be considered not to be
# oscillating. Moving this far resets the timer counting up to the
# ~oscillation_timeout 
oscillation_distance:    0.2

# A recovery behavior that reverts the costmaps used by move_base to 
# the static map outside of a user-specified range 
recovery_behavior_enabled: true

# A recovery behavior that perfroms a 360 degree rotation of 
# the robot to attempt to clear out space. 
# clearing_rotation_allowed: false

# Determines whether or not to shutdown the costmaps of the node when
# move_base is in an inactive state
shutdown_costmaps: false

# The distance away from the robot in meters 
# beyond which obstacles will be cleared from the costmap 
# when attempting to clear space in the map
conservative_reset_dist: 3.0

# global planner
# The name of the plugin for the global planner to use with move_base.
# This plugin must adhere to the nav_core::BaseGlobalPlanner interface
# specified in the nav_core package.
#
# http://wiki.ros.org/nav_core#BaseGlobalPlanner
# alternatives: global_planner/GlobalPlanner, navfn/NavfnROS, carrot_planner/CarrotPlanner


# local planner
# The name of the plugin for the local planner to use with move_base.
# This plugin must adhere to the nav_core::BaseLocalPlanner interface
# specified in the nav_core package.
#
# http://wiki.ros.org/nav_core#BaseLocalPlanner
# alternatives: dwa_local_planner/DWAPlannerROS, base_local_planner/TrajectoryPlannerROS, 
# eband_local_planner/EBandPlannerROS, teb_local_planner/TebLocalPlannerROS,
# mpc_local_planner/MpcLocalPlannerROS
